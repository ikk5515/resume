{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/skill/index.tsx\";\nimport { Row, Col, Tooltip } from 'reactstrap';\nimport { useState } from 'react';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Style } from '../common/Style';\nimport SkillRow from './row';\nimport { EmptyRowCol } from '../common';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\nexport const Skill = {\n  Component: ({\n    payload\n  }) => {\n    return PreProcessingComponent({\n      payload,\n      component: Component\n    });\n  }\n};\n\nfunction Component({\n  payload\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(EmptyRowCol, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"pb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: Style.blue,\n              children: \"SKILL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), createTooltip(payload.tooltip)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), payload.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(SkillRow, {\n        skill: skill,\n        index: index\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\nfunction createTooltip(content) {\n  if (!content) {\n    return '';\n  }\n\n  const {\n    0: tooltipOpen,\n    1: setTooltipOpen\n  } = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"small\", {\n    children: [' ', /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faQuestionCircle,\n      id: \"skill-tooltip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      placement: \"right\",\n      target: \"skill-tooltip\",\n      isOpen: tooltipOpen,\n      toggle: toggle,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/skill/index.tsx"],"names":["Row","Col","Tooltip","useState","faQuestionCircle","FontAwesomeIcon","Style","SkillRow","EmptyRowCol","PreProcessingComponent","Skill","Component","payload","component","blue","createTooltip","tooltip","skills","map","skill","index","toString","content","tooltipOpen","setTooltipOpen","toggle","whiteSpace"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAkC,YAAlC;AACA,SAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,QAAP,MAAqB,OAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AAIA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA0D;AACnE,WAAOH,sBAAsB,CAAU;AACrCG,MAAAA,OADqC;AAErCC,MAAAA,SAAS,EAAEF;AAF0B,KAAV,CAA7B;AAID;AANkB,CAAd;;AASP,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAyE;AACvE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE;AAAA,oCACE;AAAM,cAAA,KAAK,EAAEN,KAAK,CAACQ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGC,aAAa,CAACH,OAAO,CAACI,OAAT,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EASGJ,OAAO,CAACK,MAAR,CAAeC,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,kBAClB,QAAC,QAAD;AAAiC,QAAA,KAAK,EAAED,KAAxC;AAA+C,QAAA,KAAK,EAAEC;AAAtD,SAAeA,KAAK,CAACC,QAAN,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;AAED,SAASN,aAAT,CAAuBO,OAAvB,EAAyC;AACvC,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCrB,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMsB,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEA,sBACE;AAAA,eACG,GADH,eAEE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnB,gBAAvB;AAAyC,MAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE;AAAEsB,QAAAA,UAAU,EAAE;AAAd,OADT;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,MAAM,EAAC,eAHT;AAIE,MAAA,MAAM,EAAEH,WAJV;AAKE,MAAA,MAAM,EAAEE,MALV;AAAA,gBAOGH;AAPH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD","sourcesContent":["import { Row, Col, Tooltip } from 'reactstrap';\nimport { PropsWithChildren, useState } from 'react';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Style } from '../common/Style';\nimport { ISkill } from './ISkill';\nimport SkillRow from './row';\nimport { EmptyRowCol } from '../common';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\n\ntype Payload = ISkill.Payload;\n\nexport const Skill = {\n  Component: ({ payload }: PropsWithChildren<{ payload: Payload }>) => {\n    return PreProcessingComponent<Payload>({\n      payload,\n      component: Component,\n    });\n  },\n};\n\nfunction Component({ payload }: PropsWithChildren<{ payload: Payload }>) {\n  return (\n    <div className=\"mt-5\">\n      <EmptyRowCol>\n        <Row className=\"pb-3\">\n          <Col>\n            <h2>\n              <span style={Style.blue}>SKILL</span>\n              {createTooltip(payload.tooltip)}\n            </h2>\n          </Col>\n        </Row>\n        {payload.skills.map((skill, index) => (\n          <SkillRow key={index.toString()} skill={skill} index={index} />\n        ))}\n      </EmptyRowCol>\n    </div>\n  );\n}\n\nfunction createTooltip(content?: string) {\n  if (!content) {\n    return '';\n  }\n\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <small>\n      {' '}\n      <FontAwesomeIcon icon={faQuestionCircle} id=\"skill-tooltip\" />\n      <Tooltip\n        style={{ whiteSpace: 'pre-wrap' }}\n        placement=\"right\"\n        target=\"skill-tooltip\"\n        isOpen={tooltipOpen}\n        toggle={toggle}\n      >\n        {content}\n      </Tooltip>\n    </small>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}