{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/introduce/index.tsx\";\nimport { Row, Col, Badge } from 'reactstrap';\nimport { DateTime } from 'luxon';\nimport { Style } from '../common/Style';\nimport Util from '../common/Util';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\nexport const Introduce = {\n  Component: ({\n    payload\n  }) => {\n    return PreProcessingComponent({\n      payload,\n      component: Component\n    });\n  }\n};\n\nfunction Component({\n  payload\n}) {\n  const latestUpdated = DateTime.fromFormat(payload.latestUpdated, Util.LUXON_DATE_FORMAT.YYYY_LL_DD);\n  const latestUpdatedByNow = Math.floor(DateTime.local().diff(latestUpdated).milliseconds / 1000 / 60 / 60 / 24);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: Style.blue,\n          children: \"INTRODUCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 9,\n        children: [payload.contents.map((content, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Latest Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Badge, {\n            color: \"secondary\",\n            children: `${latestUpdated.toFormat(Util.LUXON_DATE_FORMAT.YYYY_DOT_LL_DOT_DD)} (D+${latestUpdatedByNow})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-right\",\n          style: Style.sign,\n          children: payload.sign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/introduce/index.tsx"],"names":["Row","Col","Badge","DateTime","Style","Util","PreProcessingComponent","Introduce","Component","payload","component","latestUpdated","fromFormat","LUXON_DATE_FORMAT","YYYY_LL_DD","latestUpdatedByNow","Math","floor","local","diff","milliseconds","blue","contents","map","content","index","toString","toFormat","YYYY_DOT_LL_DOT_DD","sign"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,YAAhC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,SAASC,sBAAT,QAAuC,kCAAvC;AAIA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA0D;AACnE,WAAOH,sBAAsB,CAAU;AACrCG,MAAAA,OADqC;AAErCC,MAAAA,SAAS,EAAEF;AAF0B,KAAV,CAA7B;AAID;AANsB,CAAlB;;AASP,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAyE;AACvE,QAAME,aAAa,GAAGR,QAAQ,CAACS,UAAT,CACpBH,OAAO,CAACE,aADY,EAEpBN,IAAI,CAACQ,iBAAL,CAAuBC,UAFH,CAAtB;AAIA,QAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CACzBd,QAAQ,CAACe,KAAT,GAAiBC,IAAjB,CAAsBR,aAAtB,EAAqCS,YAArC,GAAoD,IAApD,GAA2D,EAA3D,GAAgE,EAAhE,GAAqE,EAD5C,CAA3B;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACE;AAAI,UAAA,KAAK,EAAEhB,KAAK,CAACiB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,mBACGZ,OAAO,CAACa,QAAR,CAAiBC,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,kBACpB;AAAA,oBAA2BD;AAA3B,WAAQC,KAAK,CAACC,QAAN,EAAR;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAIE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EACgC,GADhC,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,WAAb;AAAA,sBACI,GAAEf,aAAa,CAACgB,QAAd,CACFtB,IAAI,CAACQ,iBAAL,CAAuBe,kBADrB,CAEF,OAAMb,kBAAmB;AAH7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAYE;AAAG,UAAA,SAAS,EAAC,YAAb;AAA0B,UAAA,KAAK,EAAEX,KAAK,CAACyB,IAAvC;AAAA,oBACGpB,OAAO,CAACoB;AADX;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD","sourcesContent":["import { Row, Col, Badge } from 'reactstrap';\nimport { PropsWithChildren } from 'react';\nimport { DateTime } from 'luxon';\nimport { Style } from '../common/Style';\nimport Util from '../common/Util';\nimport { IIntroduce } from './IIntroduce';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\n\ntype Payload = IIntroduce.Payload;\n\nexport const Introduce = {\n  Component: ({ payload }: PropsWithChildren<{ payload: Payload }>) => {\n    return PreProcessingComponent<Payload>({\n      payload,\n      component: Component,\n    });\n  },\n};\n\nfunction Component({ payload }: PropsWithChildren<{ payload: Payload }>) {\n  const latestUpdated = DateTime.fromFormat(\n    payload.latestUpdated,\n    Util.LUXON_DATE_FORMAT.YYYY_LL_DD,\n  );\n  const latestUpdatedByNow = Math.floor(\n    DateTime.local().diff(latestUpdated).milliseconds / 1000 / 60 / 60 / 24,\n  );\n\n  return (\n    <div className=\"mt-5\">\n      <Row>\n        <Col sm={12} md={3}>\n          <h2 style={Style.blue}>INTRODUCE</h2>\n        </Col>\n        <Col sm={12} md={9}>\n          {payload.contents.map((content, index) => (\n            <p key={index.toString()}>{content}</p>\n          ))}\n          <p className=\"text-right\">\n            <small>Latest Updated</small>{' '}\n            <Badge color=\"secondary\">\n              {`${latestUpdated.toFormat(\n                Util.LUXON_DATE_FORMAT.YYYY_DOT_LL_DOT_DD,\n              )} (D+${latestUpdatedByNow})`}\n            </Badge>\n          </p>\n          <p className=\"text-right\" style={Style.sign}>\n            {payload.sign}\n          </p>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}