{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/etc/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DateTime } from 'luxon';\nimport { CommonSection } from '../common/CommonSection';\nimport { EmptyRowCol } from '../common';\nimport { CommonRows } from '../common/CommonRow';\nimport Util from '../common/Util';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\nexport const Etc = {\n  Component: ({\n    payload\n  }) => {\n    return PreProcessingComponent({\n      payload,\n      component: Component\n    });\n  }\n};\n\nfunction Component({\n  payload\n}) {\n  return /*#__PURE__*/_jsxDEV(CommonSection, {\n    title: \"ETC\",\n    children: /*#__PURE__*/_jsxDEV(EducationRow, {\n      payload: payload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\nfunction EducationRow({\n  payload\n}) {\n  return /*#__PURE__*/_jsxDEV(EmptyRowCol, {\n    children: payload.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(CommonRows, {\n        payload: serialize(item),\n        index: index\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\nfunction serialize(item) {\n  const DATE_FORMAT = Util.LUXON_DATE_FORMAT;\n  const startedAt = DateTime.fromFormat(item.startedAt, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL);\n\n  const title = (() => {\n    if (item.endedAt) {\n      const endedAt = DateTime.fromFormat(item.endedAt, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL);\n      return `${startedAt} ~ ${endedAt}`;\n    }\n\n    return startedAt;\n  })();\n\n  return {\n    left: {\n      title\n    },\n    right: _objectSpread({}, item)\n  };\n}","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/etc/index.tsx"],"names":["DateTime","CommonSection","EmptyRowCol","CommonRows","Util","PreProcessingComponent","Etc","Component","payload","component","EducationRow","list","map","item","index","serialize","toString","DATE_FORMAT","LUXON_DATE_FORMAT","startedAt","fromFormat","YYYY_LL","toFormat","YYYY_DOT_LL","title","endedAt","left","right"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,SAASC,sBAAT,QAAuC,kCAAvC;AAKA,OAAO,MAAMC,GAAG,GAAG;AACjBC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA0D;AACnE,WAAOH,sBAAsB,CAAe;AAC1CG,MAAAA,OAD0C;AAE1CC,MAAAA,SAAS,EAAEF;AAF+B,KAAf,CAA7B;AAID;AANgB,CAAZ;;AASP,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAyE;AACvE,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAC,KAArB;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,SAASE,YAAT,CAAsB;AAAEF,EAAAA;AAAF,CAAtB,EAA4E;AAC1E,sBACE,QAAC,WAAD;AAAA,cACGA,OAAO,CAACG,IAAR,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,0BAAO,QAAC,UAAD;AAAmC,QAAA,OAAO,EAAEC,SAAS,CAACF,IAAD,CAArD;AAA6D,QAAA,KAAK,EAAEC;AAApE,SAAiBA,KAAK,CAACE,QAAN,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,SAASD,SAAT,CAAmBF,IAAnB,EAA6C;AAC3C,QAAMI,WAAW,GAAGb,IAAI,CAACc,iBAAzB;AACA,QAAMC,SAAS,GAAGnB,QAAQ,CAACoB,UAAT,CAAoBP,IAAI,CAACM,SAAzB,EAAoCF,WAAW,CAACI,OAAhD,EAAyDC,QAAzD,CAChBL,WAAW,CAACM,WADI,CAAlB;;AAGA,QAAMC,KAAK,GAAG,CAAC,MAAM;AACnB,QAAIX,IAAI,CAACY,OAAT,EAAkB;AAChB,YAAMA,OAAO,GAAGzB,QAAQ,CAACoB,UAAT,CAAoBP,IAAI,CAACY,OAAzB,EAAkCR,WAAW,CAACI,OAA9C,EAAuDC,QAAvD,CACdL,WAAW,CAACM,WADE,CAAhB;AAGA,aAAQ,GAAEJ,SAAU,MAAKM,OAAQ,EAAjC;AACD;;AACD,WAAON,SAAP;AACD,GARa,GAAd;;AAUA,SAAO;AACLO,IAAAA,IAAI,EAAE;AACJF,MAAAA;AADI,KADD;AAILG,IAAAA,KAAK,oBACAd,IADA;AAJA,GAAP;AAQD","sourcesContent":["import { DateTime } from 'luxon';\nimport { PropsWithChildren } from 'react';\nimport { CommonSection } from '../common/CommonSection';\nimport { EmptyRowCol } from '../common';\nimport { CommonRows } from '../common/CommonRow';\nimport { IRow } from '../common/IRow';\nimport Util from '../common/Util';\nimport { IEtc } from './IEtc';\nimport { PreProcessingComponent } from '../common/PreProcessingComponent';\n\ntype Payload = IEtc.Payload;\ntype Item = IEtc.Item;\n\nexport const Etc = {\n  Component: ({ payload }: PropsWithChildren<{ payload: Payload }>) => {\n    return PreProcessingComponent<IEtc.Payload>({\n      payload,\n      component: Component,\n    });\n  },\n};\n\nfunction Component({ payload }: PropsWithChildren<{ payload: Payload }>) {\n  return (\n    <CommonSection title=\"ETC\">\n      <EducationRow payload={payload} />\n    </CommonSection>\n  );\n}\n\nfunction EducationRow({ payload }: PropsWithChildren<{ payload: Payload }>) {\n  return (\n    <EmptyRowCol>\n      {payload.list.map((item, index) => {\n        return <CommonRows key={index.toString()} payload={serialize(item)} index={index} />;\n      })}\n    </EmptyRowCol>\n  );\n}\n\nfunction serialize(item: Item): IRow.Payload {\n  const DATE_FORMAT = Util.LUXON_DATE_FORMAT;\n  const startedAt = DateTime.fromFormat(item.startedAt, DATE_FORMAT.YYYY_LL).toFormat(\n    DATE_FORMAT.YYYY_DOT_LL,\n  );\n  const title = (() => {\n    if (item.endedAt) {\n      const endedAt = DateTime.fromFormat(item.endedAt, DATE_FORMAT.YYYY_LL).toFormat(\n        DATE_FORMAT.YYYY_DOT_LL,\n      );\n      return `${startedAt} ~ ${endedAt}`;\n    }\n    return startedAt;\n  })();\n\n  return {\n    left: {\n      title,\n    },\n    right: {\n      ...item,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}