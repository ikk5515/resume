{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/common/CommonDescription.tsx\";\nimport { HrefTargetBlank } from '.';\n/** Description Recusion Generator */\n\nexport function CommonDescription(_ref) {\n  var _this = this;\n\n  var descriptions = _ref.descriptions,\n      option = _ref.option;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: descriptions ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: option !== null && option !== void 0 && option.padding ? 'pt-2' : '',\n      children: descriptions.map(function (description, descIndex) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Description, {\n            description: description\n          }, descIndex.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, _this), description.descriptions ? /*#__PURE__*/_jsxDEV(DescriptionRecursion, {\n            descriptions: description.descriptions\n          }, descIndex.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 19\n          }, _this) : '']\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false);\n} // ul 태그 depth 표현을 위한 재귀\n\n_c = CommonDescription;\n\nfunction DescriptionRecursion(_ref2) {\n  var _this2 = this;\n\n  var descriptions = _ref2.descriptions;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: descriptions.map(function (description, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Description, {\n          description: description\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, _this2), description.descriptions ? /*#__PURE__*/_jsxDEV(DescriptionRecursion, {\n          descriptions: description.descriptions\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, _this2) : '']\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DescriptionRecursion;\n\nfunction Description(_ref3) {\n  var _this3 = this;\n\n  var description = _ref3.description;\n  var content = description.content,\n      href = description.href,\n      postImage = description.postImage,\n      postHref = description.postHref,\n      weight = description.weight;\n\n  var component = function () {\n    if (href && postImage) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: getFontWeight(weight),\n        children: [/*#__PURE__*/_jsxDEV(HrefTargetBlank, {\n          url: href,\n          text: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this3), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: postImage,\n          alt: postImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 57\n        }, _this3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this3);\n    }\n\n    if (href) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: getFontWeight(weight),\n        children: /*#__PURE__*/_jsxDEV(HrefTargetBlank, {\n          url: href,\n          text: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this3);\n    }\n\n    if (postHref && postImage) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsxDEV(HrefTargetBlank, {\n          url: postHref,\n          text: postHref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, _this3), ' ', /*#__PURE__*/_jsxDEV(\"img\", {\n          src: postImage,\n          alt: postImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this3);\n    }\n\n    if (postHref) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsxDEV(HrefTargetBlank, {\n          url: postHref,\n          text: postHref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this3);\n    }\n\n    if (postImage) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: getFontWeight(weight),\n        children: [content, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: postImage,\n          alt: postImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, _this3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this3);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      style: getFontWeight(weight),\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, _this3);\n  }();\n\n  return component;\n}\n\n_c3 = Description;\n\nfunction getFontWeight(weight) {\n  if (!weight) {\n    // style 에 fontWeight 범벅 되는것을 방지\n    return {};\n  }\n\n  return {\n    fontWeight: fontWeight[weight || 'DEFAULT']\n  };\n} // Noto Sans KR Weights: 300, 400, 500, 700\n\n\nvar fontWeight = {\n  DEFAULT: 300,\n  LIGHT: 300,\n  REGULAR: 300,\n  MEDIUM: 500,\n  // BOLD: 700,\n  BOLD: 500\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CommonDescription\");\n$RefreshReg$(_c2, \"DescriptionRecursion\");\n$RefreshReg$(_c3, \"Description\");","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/common/CommonDescription.tsx"],"names":["HrefTargetBlank","CommonDescription","descriptions","option","padding","map","description","descIndex","toString","DescriptionRecursion","index","Description","content","href","postImage","postHref","weight","component","getFontWeight","fontWeight","DEFAULT","LIGHT","REGULAR","MEDIUM","BOLD"],"mappings":"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","sourcesContent":["import { PropsWithChildren, CSSProperties } from 'react';\nimport { IRow } from './IRow';\nimport { HrefTargetBlank } from '.';\n\n/** Description Recusion Generator */\nexport function CommonDescription({\n  descriptions,\n  option,\n}: PropsWithChildren<{ descriptions: IRow.Description[]; option?: { padding?: boolean } }>) {\n  return (\n    <>\n      {descriptions ? (\n        <ul className={option?.padding ? 'pt-2' : ''}>\n          {descriptions.map((description, descIndex) => {\n            return (\n              <>\n                <Description description={description} key={descIndex.toString()} />\n                {description.descriptions ? (\n                  <DescriptionRecursion\n                    descriptions={description.descriptions}\n                    key={descIndex.toString()}\n                  />\n                ) : (\n                  ''\n                )}\n              </>\n            );\n          })}\n        </ul>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\n// ul 태그 depth 표현을 위한 재귀\nfunction DescriptionRecursion({\n  descriptions,\n}: PropsWithChildren<{ descriptions: IRow.Description[] }>) {\n  return (\n    <ul>\n      {descriptions.map((description, index) => {\n        return (\n          <>\n            <Description description={description} key={index.toString()} />\n            {description.descriptions ? (\n              <DescriptionRecursion\n                descriptions={description.descriptions}\n                key={index.toString()}\n              />\n            ) : (\n              ''\n            )}\n          </>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction Description({ description }: PropsWithChildren<{ description: IRow.Description }>) {\n  const { content, href, postImage, postHref, weight } = description;\n\n  const component = (() => {\n    if (href && postImage) {\n      return (\n        <li style={getFontWeight(weight)}>\n          <HrefTargetBlank url={href} text={content} /> <img src={postImage} alt={postImage} />\n        </li>\n      );\n    }\n    if (href) {\n      return (\n        <li style={getFontWeight(weight)}>\n          <HrefTargetBlank url={href} text={content} />\n        </li>\n      );\n    }\n    if (postHref && postImage) {\n      return (\n        <li style={getFontWeight(weight)}>\n          {content} <HrefTargetBlank url={postHref} text={postHref} />{' '}\n          <img src={postImage} alt={postImage} />\n        </li>\n      );\n    }\n    if (postHref) {\n      return (\n        <li style={getFontWeight(weight)}>\n          {content} <HrefTargetBlank url={postHref} text={postHref} />\n        </li>\n      );\n    }\n    if (postImage) {\n      return (\n        <li style={getFontWeight(weight)}>\n          {content} <img src={postImage} alt={postImage} />\n        </li>\n      );\n    }\n    return <li style={getFontWeight(weight)}>{content}</li>;\n  })();\n\n  return component;\n}\n\nfunction getFontWeight(weight?: IRow.Description['weight']): CSSProperties {\n  if (!weight) {\n    // style 에 fontWeight 범벅 되는것을 방지\n    return {};\n  }\n  return {\n    fontWeight: fontWeight[weight || 'DEFAULT'],\n  };\n}\n\n// Noto Sans KR Weights: 300, 400, 500, 700\nconst fontWeight: Record<IRow.FontWeightType, number> = {\n  DEFAULT: 300,\n  LIGHT: 300,\n  REGULAR: 300,\n  MEDIUM: 500,\n  // BOLD: 700,\n  BOLD: 500,\n};\n"]},"metadata":{},"sourceType":"module"}