{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/project/row.tsx\";\nimport { DateTime } from 'luxon';\nimport { CommonRows } from '../common/CommonRow';\nimport Util from '../common/Util';\nimport { EmptyRowCol } from '../common';\nexport default function ProjectRow({\n  payload\n}) {\n  return /*#__PURE__*/_jsxDEV(EmptyRowCol, {\n    children: payload.list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(CommonRows, {\n        payload: serialize(item),\n        index: index\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\nfunction serialize(payload) {\n  const DATE_FORMAT = Util.LUXON_DATE_FORMAT;\n  const startedAt = DateTime.fromFormat(payload.startedAt, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL);\n\n  const title = (() => {\n    if (payload.endedAt) {\n      const endedAt = DateTime.fromFormat(payload.endedAt, DATE_FORMAT.YYYY_LL).toFormat(DATE_FORMAT.YYYY_DOT_LL);\n      return `${startedAt} ~ ${endedAt}`;\n    }\n\n    return `${startedAt} ~`;\n  })();\n\n  return {\n    left: {\n      title\n    },\n    right: {\n      title: payload.title,\n      subTitle: payload.where,\n      descriptions: payload.descriptions\n    }\n  };\n}","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/project/row.tsx"],"names":["DateTime","CommonRows","Util","EmptyRowCol","ProjectRow","payload","list","map","item","index","serialize","toString","DATE_FORMAT","LUXON_DATE_FORMAT","startedAt","fromFormat","YYYY_LL","toFormat","YYYY_DOT_LL","title","endedAt","left","right","subTitle","where","descriptions"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAmF;AAChG,sBACE,QAAC,WAAD;AAAA,cACGA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,0BAAO,QAAC,UAAD;AAAmC,QAAA,OAAO,EAAEC,SAAS,CAACF,IAAD,CAArD;AAA6D,QAAA,KAAK,EAAEC;AAApE,SAAiBA,KAAK,CAACE,QAAN,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,SAASD,SAAT,CAAmBL,OAAnB,EAAyD;AACvD,QAAMO,WAAW,GAAGV,IAAI,CAACW,iBAAzB;AACA,QAAMC,SAAS,GAAGd,QAAQ,CAACe,UAAT,CAAoBV,OAAO,CAACS,SAA5B,EAAuCF,WAAW,CAACI,OAAnD,EAA4DC,QAA5D,CAChBL,WAAW,CAACM,WADI,CAAlB;;AAGA,QAAMC,KAAK,GAAG,CAAC,MAAM;AACnB,QAAId,OAAO,CAACe,OAAZ,EAAqB;AACnB,YAAMA,OAAO,GAAGpB,QAAQ,CAACe,UAAT,CAAoBV,OAAO,CAACe,OAA5B,EAAqCR,WAAW,CAACI,OAAjD,EAA0DC,QAA1D,CACdL,WAAW,CAACM,WADE,CAAhB;AAGA,aAAQ,GAAEJ,SAAU,MAAKM,OAAQ,EAAjC;AACD;;AACD,WAAQ,GAAEN,SAAU,IAApB;AACD,GARa,GAAd;;AAUA,SAAO;AACLO,IAAAA,IAAI,EAAE;AACJF,MAAAA;AADI,KADD;AAILG,IAAAA,KAAK,EAAE;AACLH,MAAAA,KAAK,EAAEd,OAAO,CAACc,KADV;AAELI,MAAAA,QAAQ,EAAElB,OAAO,CAACmB,KAFb;AAGLC,MAAAA,YAAY,EAAEpB,OAAO,CAACoB;AAHjB;AAJF,GAAP;AAUD","sourcesContent":["import { DateTime } from 'luxon';\nimport { PropsWithChildren } from 'react';\nimport { IProject } from './IProject';\nimport { CommonRows } from '../common/CommonRow';\nimport { IRow } from '../common/IRow';\nimport Util from '../common/Util';\nimport { EmptyRowCol } from '../common';\n\nexport default function ProjectRow({ payload }: PropsWithChildren<{ payload: IProject.Payload }>) {\n  return (\n    <EmptyRowCol>\n      {payload.list.map((item, index) => {\n        return <CommonRows key={index.toString()} payload={serialize(item)} index={index} />;\n      })}\n    </EmptyRowCol>\n  );\n}\n\nfunction serialize(payload: IProject.Item): IRow.Payload {\n  const DATE_FORMAT = Util.LUXON_DATE_FORMAT;\n  const startedAt = DateTime.fromFormat(payload.startedAt, DATE_FORMAT.YYYY_LL).toFormat(\n    DATE_FORMAT.YYYY_DOT_LL,\n  );\n  const title = (() => {\n    if (payload.endedAt) {\n      const endedAt = DateTime.fromFormat(payload.endedAt, DATE_FORMAT.YYYY_LL).toFormat(\n        DATE_FORMAT.YYYY_DOT_LL,\n      );\n      return `${startedAt} ~ ${endedAt}`;\n    }\n    return `${startedAt} ~`;\n  })();\n\n  return {\n    left: {\n      title,\n    },\n    right: {\n      title: payload.title,\n      subTitle: payload.where,\n      descriptions: payload.descriptions,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}