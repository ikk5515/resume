{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ingi/Desktop/coding/github.io/untitled folder/component/common/index.tsx\";\nimport { Row, Col } from 'reactstrap';\nexport function EmptyRowCol(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = EmptyRowCol;\nexport function HrefTargetBlank(_ref2) {\n  var url = _ref2.url,\n      text = _ref2.text;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    children: text || url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c2 = HrefTargetBlank;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmptyRowCol\");\n$RefreshReg$(_c2, \"HrefTargetBlank\");","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/common/index.tsx"],"names":["Row","Col","EmptyRowCol","children","HrefTargetBlank","url","text"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AAGA,OAAO,SAASC,WAAT,OAAiE;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AACtE,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,GAAD;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANeD,W;AAQhB,OAAO,SAASE,eAAT,QAA2F;AAAA,MAAhEC,GAAgE,SAAhEA,GAAgE;AAAA,MAA3DC,IAA2D,SAA3DA,IAA2D;AAChG,sBACE;AAAG,IAAA,IAAI,EAAED,GAAT;AAAc,IAAA,MAAM,EAAC,QAArB;AAA8B,IAAA,GAAG,EAAC,qBAAlC;AAAA,cACGC,IAAI,IAAID;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANeD,e","sourcesContent":["import { Row, Col } from 'reactstrap';\nimport { PropsWithChildren } from 'react';\n\nexport function EmptyRowCol<T = {}>({ children }: PropsWithChildren<T>) {\n  return (\n    <Row>\n      <Col>{children}</Col>\n    </Row>\n  );\n}\n\nexport function HrefTargetBlank({ url, text }: PropsWithChildren<{ url: string; text?: string }>) {\n  return (\n    <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n      {text || url}\n    </a>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}