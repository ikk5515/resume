{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/** 각 세션의 Component 전처리기. 공통 수행 요소 */\nexport function PreProcessingComponent({\n  payload,\n  component\n}) {\n  if (payload !== null && payload !== void 0 && payload.disable) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return component({\n    payload\n  });\n}","map":{"version":3,"sources":["/Users/ingi/Desktop/coding/github.io/untitled folder/component/common/PreProcessingComponent.tsx"],"names":["PreProcessingComponent","payload","component","disable"],"mappings":";;;AAKA;AACA,OAAO,SAASA,sBAAT,CAA2D;AAChEC,EAAAA,OADgE;AAEhEC,EAAAA;AAFgE,CAA3D,EAMJ;AACD,MAAID,OAAJ,aAAIA,OAAJ,eAAIA,OAAO,CAAEE,OAAb,EAAsB;AACpB,wBAAO,qCAAP;AACD;;AAED,SAAOD,SAAS,CAAC;AAAED,IAAAA;AAAF,GAAD,CAAhB;AACD","sourcesContent":["import { PropsWithChildren } from 'react';\nimport { ICommon } from './ICommon';\n\ntype Component<T> = (props: PropsWithChildren<{ payload: T }>) => JSX.Element;\n\n/** 각 세션의 Component 전처리기. 공통 수행 요소 */\nexport function PreProcessingComponent<T extends ICommon.Payload>({\n  payload,\n  component,\n}: {\n  payload: T;\n  component: Component<T>;\n}) {\n  if (payload?.disable) {\n    return <></>;\n  }\n\n  return component({ payload });\n}\n"]},"metadata":{},"sourceType":"module"}